# app/bot/telegram_bot.py
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import logging

logger = logging.getLogger(__name__)

class TelegramBot:
    def __init__(self, token, gigachat_client, database):
        self.token = token
        self.gigachat = gigachat_client
        self.db = database
        self.application = None

    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        welcome_text = """
        üëã –ü—Ä–∏–≤–µ—Ç! –Ø - —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–µ—Ç—Å–∫–æ–≥–æ –ª–∞–≥–µ—Ä—è "–ö–æ—Å–º–æ—Å" –≤ –¢–∞–º–±–æ–≤—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏.

        –Ø –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –æ:
        ‚Ä¢ –ü—Ä–æ–≥—Ä–∞–º–º–∞—Ö –∏ —Å–º–µ–Ω–∞—Ö
        ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ö –¥–ª—è –∑–∞–µ–∑–¥–∞
        ‚Ä¢ –ú–µ—Ä–∞—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        ‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç–∞—Ö –∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–∏

        –ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å!

        üèïÔ∏è –õ–∞–≥–µ—Ä—å "–ö–æ—Å–º–æ—Å" - –º–µ—Å—Ç–æ, –≥–¥–µ —Ä–æ–∂–¥–∞—é—Ç—Å—è –º–µ—á—Ç—ã!
        """
        await update.message.reply_text(welcome_text)

    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        help_text = """
        ü§ñ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:

        –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä:
        ‚Ä¢ "–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è –ª–∞–≥–µ—Ä—è?"
        ‚Ä¢ "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –ø—É—Ç–µ–≤–∫–∞?"
        ‚Ä¢ "–ö–∞–∫–∏–µ –µ—Å—Ç—å —Å–º–µ–Ω—ã?"

        –Ø –Ω–∞–π–¥—É –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –æ—Ç–≤–µ—á—É –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å.

        –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–º–æ—â—å, –∑–≤–æ–Ω–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ª–∞–≥–µ—Ä—è.
        """
        await update.message.reply_text(help_text)

    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user = update.message.from_user
        user_message = update.message.text

        logger.info(f"–í–æ–ø—Ä–æ—Å –æ—Ç {user.first_name} ({user.id}): {user_message}")
        await update.message.chat.send_action(action="typing")

        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫ –≤–º–µ—Å—Ç–æ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
            similar_docs = self.db.search_similar_documents(user_message, k=3)

            context = ""
            if similar_docs:
                for doc in similar_docs:
                    context += f"{doc['content']}\n\n"
            else:
                context = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π."

            messages = [
                {
                    "role": "system",
                    "content": """–¢—ã - –ø–æ–ª–µ–∑–Ω—ã–π AI-–ø–æ–º–æ—â–Ω–∏–∫ –¥–µ—Ç—Å–∫–æ–≥–æ –ª–∞–≥–µ—Ä—è "–ö–æ—Å–º–æ—Å" –≤ –¢–∞–º–±–æ–≤—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏. 
–û—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —Ä–æ–¥–∏—Ç–µ–ª–µ–π –≤–µ–∂–ª–∏–≤–æ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ. –û—Å–Ω–æ–≤—ã–≤–∞–π –æ—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ.
–ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –ø—Ä–µ–¥–ª–æ–∂–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ª–∞–≥–µ—Ä—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è."""
                },
                {
                    "role": "user",
                    "content": f"""–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
{context}

–í–æ–ø—Ä–æ—Å —Ä–æ–¥–∏—Ç–µ–ª—è: {user_message}

–û—Ç–≤–µ—Ç:"""
                }
            ]

            response = self.gigachat.chat_completion(messages)

            if "—Å–≤—è–∂–∏—Ç–µ—Å—å" not in response.lower() and "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü" not in response.lower():
                response += "\n\n–î–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ª–∞–≥–µ—Ä—è."

            await update.message.reply_text(response)
            logger.info(f"–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.first_name}")

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ–∑–∂–µ.")

    def setup_handlers(self):
        self.application.add_handler(CommandHandler("start", self.start_command))
        self.application.add_handler(CommandHandler("help", self.help_command))
        self.application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))

    def run(self):
        try:
            self.application = Application.builder().token(self.token).build()
            self.setup_handlers()

            logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
            self.application.run_polling()

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")